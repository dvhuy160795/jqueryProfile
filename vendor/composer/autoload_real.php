<?php

// autoload_real.php @generated by Composer

<<<<<<< HEAD
class ComposerAutoloaderInit3090c40169df0a25cbcce931d2b076c0
=======
class ComposerAutoloaderInit70ae213eed56c7d3157b99e119bbc77b
>>>>>>> 161eb9f1059b49c3c455023835dc111d79405f0e
{
    private static $loader;

    public static function loadClassLoader($class)
    {
        if ('Composer\Autoload\ClassLoader' === $class) {
            require __DIR__ . '/ClassLoader.php';
        }
    }

    public static function getLoader()
    {
        if (null !== self::$loader) {
            return self::$loader;
        }

<<<<<<< HEAD
        spl_autoload_register(array('ComposerAutoloaderInit3090c40169df0a25cbcce931d2b076c0', 'loadClassLoader'), true, true);
        self::$loader = $loader = new \Composer\Autoload\ClassLoader();
        spl_autoload_unregister(array('ComposerAutoloaderInit3090c40169df0a25cbcce931d2b076c0', 'loadClassLoader'));
=======
        spl_autoload_register(array('ComposerAutoloaderInit70ae213eed56c7d3157b99e119bbc77b', 'loadClassLoader'), true, true);
        self::$loader = $loader = new \Composer\Autoload\ClassLoader();
        spl_autoload_unregister(array('ComposerAutoloaderInit70ae213eed56c7d3157b99e119bbc77b', 'loadClassLoader'));
>>>>>>> 161eb9f1059b49c3c455023835dc111d79405f0e

        $includePaths = require __DIR__ . '/include_paths.php';
        array_push($includePaths, get_include_path());
        set_include_path(implode(PATH_SEPARATOR, $includePaths));

        $useStaticLoader = PHP_VERSION_ID >= 50600 && !defined('HHVM_VERSION') && (!function_exists('zend_loader_file_encoded') || !zend_loader_file_encoded());
        if ($useStaticLoader) {
            require_once __DIR__ . '/autoload_static.php';

<<<<<<< HEAD
            call_user_func(\Composer\Autoload\ComposerStaticInit3090c40169df0a25cbcce931d2b076c0::getInitializer($loader));
=======
            call_user_func(\Composer\Autoload\ComposerStaticInit70ae213eed56c7d3157b99e119bbc77b::getInitializer($loader));
>>>>>>> 161eb9f1059b49c3c455023835dc111d79405f0e
        } else {
            $map = require __DIR__ . '/autoload_namespaces.php';
            foreach ($map as $namespace => $path) {
                $loader->set($namespace, $path);
            }

            $map = require __DIR__ . '/autoload_psr4.php';
            foreach ($map as $namespace => $path) {
                $loader->setPsr4($namespace, $path);
            }

            $classMap = require __DIR__ . '/autoload_classmap.php';
            if ($classMap) {
                $loader->addClassMap($classMap);
            }
        }

        $loader->register(true);

        return $loader;
    }
}
